{"version":3,"sources":["components/cityBuilder/cityBuilder.module.css","providers/utils.js","components/cityViewer/cityViewer.module.css","components/cityViewer/tooltip/tooltip.module.css","components/header/header.module.css","assets/Ground.png","assets/Grass.png","assets/Church.png","assets/Pravda.png","assets/milk_cooperation_small.png","assets/milk_cooperation.png","components/common/Modal.jsx","components/modals/LoadModal.jsx","components/header/Header.jsx","constants.js","components/TilesLibrary.jsx","providers/TilesService.js","components/cityBuilder/CityBuilder.jsx","components/cityViewer/tooltip/Tooltip.jsx","components/cityViewer/CityViewer.jsx","components/TilesBuilder.jsx","App.js","index.js"],"names":["module","exports","debouce","cb","delay","now","performance","lastCall","window","clearTimeout","lastTimerId","setTimeout","saveToHash","obj","location","hash","Buffer","from","JSON","stringify","toString","stateToB64","loadFromHash","maybeHash","data","cleanHash","str","parse","e","indexOf","split","pop","substr","Context","React","createContext","ModalProvider","_ref","children","modalRef","useRef","context","setContext","useState","useEffect","current","createElement","className","Provider","value","ref","Modal","_ref2","onClose","props","modalNode","useContext","ReactDOM","createPortal","onClick","Object","assign","ev","stopPropagation","title","LoadModal","setOpen","onLoadHash","loadInputRef","style","width","maxWidth","type","Header","isEditMode","onEditHandler","isModalOpen","setIsModalOpen","header","options","BLOCK_TYPES","BLOCK_LIBRARY","url","imgSrc1","imgSrc2","imgSrc3","imgSrc4","imgSrc6","imgSrc7","TilesLibrary","selectedTile","onSelect","map","i","key","concat","backgroundImage","constants","indexToTileXY","tileX","tileY","Math","floor","x","y","indexToPosition","gridSize","arguments","length","undefined","indexToViewPosition","offsetX","offsetY","left","top","createTiles","Array","fill","_","randomize","random","loadStateFromHash","baseGridSize","baseTiles","tiles","TilesView","onLeftClick","onRightClick","handleClick","target","hasAttribute","Number","getAttribute","getTileIdxFromBtnEvent","preventDefault","buttons","tilesView","onMouseMove","tile","withHover","withError","tileBtn","data-tile-idx","onMouseDown","Tooltip","tooltip","closeBtn","table","Fragment","CityViewer","selected","setSelected","closeHandler","lastHash","TilesBuilder","setGridSize","setTiles","setSelectedTile","setIsEditMode","addEventListener","onHashChange","removeEventListener","updateHash","newHash","URL","newURL","handleLoadHash","doUpdate","newGridSize","newTiles","setTile","tileIdx","tileType","leftClick","rightClick","onGridSizeChange","newValue","updateGridSize","oldGridSize","oldTiles","save","Map","forEach","coords","set","newIdx","positionToIndex","onRandomize","onClear","clear","editHandler","prev","newSelection","CityBuilder","App","rootElement","document","getElementById","render"],"mappings":"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","file":"static/js/main.783814a0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tilesView\":\"cityBuilder_tilesView__2VkST\",\"tile\":\"cityBuilder_tile__2qakW\",\"tileBtn\":\"cityBuilder_tileBtn__2V0K_\",\"tile-btn\":\"cityBuilder_tile-btn__2pHr0\",\"withHover\":\"cityBuilder_withHover__3Lf3_\",\"withError\":\"cityBuilder_withError__I0TC6\"};","export const stateToB64 = obj =>\r\n  Buffer.from(JSON.stringify(obj)).toString(\"base64\");\r\n\r\nexport const B64ToState = str => JSON.parse(Buffer.from(str, \"base64\"));\r\n\r\nexport const debouce = (cb, delay) => {\r\n  const now = performance.now();\r\n  if (debouce.lastCall && now - debouce.lastCall < delay) {\r\n    window.clearTimeout(debouce.lastTimerId);\r\n  }\r\n\r\n  debouce.lastCall = now;\r\n  debouce.lastTimerId = window.setTimeout(() => {\r\n    cb();\r\n    debouce.lastCall = 0;\r\n    debouce.lastTimerId = null;\r\n  }, delay);\r\n};\r\n\r\nexport const saveToHash = obj => {\r\n  return (window.location.hash = stateToB64(obj));\r\n};\r\n\r\nexport const loadFromHash = maybeHash => {\r\n  let data = null;\r\n  try {\r\n    const hash = cleanHash(maybeHash || window.location.hash);\r\n    data = B64ToState(hash);\r\n  } catch (e) {\r\n    /* This can safely fail */\r\n  }\r\n\r\n  return data;\r\n};\r\n\r\nexport const cleanHash = hash => {\r\n  if (hash) {\r\n    if (hash.indexOf(\"/\")) {\r\n      hash = hash.split(\"/\").pop();\r\n    }\r\n    if (hash[0] === \"#\") {\r\n      hash = hash.substr(1);\r\n    }\r\n  }\r\n\r\n  return hash;\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tilesView\":\"cityViewer_tilesView__nDwhO\",\"tile\":\"cityViewer_tile__3vtyP\",\"withHover\":\"cityViewer_withHover__2f_Y9\",\"tileBtn\":\"cityViewer_tileBtn__2uFFw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"tooltip_tooltip__1uHZI\",\"closeBtn\":\"tooltip_closeBtn__1LL9e\",\"table\":\"tooltip_table__ITSvF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__v9FKw\",\"options\":\"header_options__2uQYe\"};","module.exports = __webpack_public_path__ + \"static/media/Ground.f403a60e.png\";","module.exports = __webpack_public_path__ + \"static/media/Grass.7170c6cd.png\";","module.exports = __webpack_public_path__ + \"static/media/Church.7bc8d6de.png\";","module.exports = __webpack_public_path__ + \"static/media/Pravda.cb766296.png\";","module.exports = __webpack_public_path__ + \"static/media/milk_cooperation_small.f31462c0.png\";","module.exports = __webpack_public_path__ + \"static/media/milk_cooperation.972d65d7.png\";","import \"./Modal.css\";\r\nimport React, { useRef, useContext, useState, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nconst Context = React.createContext();\r\n\r\nexport function ModalProvider({ children }) {\r\n  const modalRef = useRef();\r\n  const [context, setContext] = useState();\r\n\r\n  // make sure re-render is triggered after initial\r\n  // render so that modalRef exists\r\n  useEffect(() => {\r\n    setContext(modalRef.current);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"modal-container\">\r\n      <Context.Provider value={context}>{children}</Context.Provider>\r\n      <div ref={modalRef} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function Modal({ onClose, children, ...props }) {\r\n  const modalNode = useContext(Context);\r\n\r\n  return modalNode\r\n    ? ReactDOM.createPortal(\r\n        <div className=\"modal-overlay\" onClick={onClose}>\r\n          <div\r\n            className=\"modal-dialog\"\r\n            onClick={ev => ev.stopPropagation()}\r\n            {...props}\r\n          >\r\n            <div className=\"modal-head\">\r\n              <div className=\"modal-title\">{props.title || \"\"}</div>\r\n              <button className=\"modal-btn\" onClick={onClose}>\r\n                Close\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body\">{children}</div>\r\n          </div>\r\n        </div>,\r\n        modalNode\r\n      )\r\n    : null;\r\n}\r\n","import React, { useRef } from \"react\";\r\nimport { Modal } from \"components/common/Modal\";\r\n\r\nexport default function LoadModal({ setOpen, onLoadHash }) {\r\n  const loadInputRef = useRef();\r\n\r\n  const handleLoadHash = ev => onLoadHash(loadInputRef.current.value);\r\n\r\n  return (\r\n    <Modal\r\n      title=\"Load...\"\r\n      onClose={() => setOpen(false)}\r\n      style={{ width: \"100%\", maxWidth: 420 }}\r\n    >\r\n      <p>Paste a city hash below to load a previous creation :</p>\r\n      <input type=\"text\" ref={loadInputRef} />\r\n      <button className=\"btn-clear\" onClick={handleLoadHash}>\r\n        Load\r\n      </button>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport LoadModal from 'components/modals/LoadModal';\r\nimport style from './header.module.css';\r\n\r\nexport default function Header({ onLoadHash, isEditMode, onEditHandler }) {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  return (\r\n    <header className={style.header}>\r\n      <div></div>\r\n      <div className={style.options}>\r\n        <button onClick={onEditHandler}>{isEditMode ? 'View' : 'Edit'}</button>\r\n      </div>\r\n\r\n      {isModalOpen && <LoadModal setOpen={setIsModalOpen} onLoadHash={onLoadHash} />}\r\n    </header>\r\n  );\r\n}\r\n","import imgSrc1 from './assets/Ground.png';\nimport imgSrc2 from './assets/Grass.png';\nimport imgSrc3 from './assets/Church.png';\nimport imgSrc4 from './assets/Pravda.png';\nimport imgSrc6 from './assets/milk_cooperation_small.png';\nimport imgSrc7 from './assets/milk_cooperation.png';\n\nexport const BLOCK_TYPES = {\n  ground: { type: 'ground' },\n  business: { type: 'business' },\n};\n\nexport const BLOCK_LIBRARY = [\n  { url: imgSrc1, type: BLOCK_TYPES.ground.type },\n  { url: imgSrc2, type: BLOCK_TYPES.ground.type },\n  { url: imgSrc3, type: BLOCK_TYPES.business.type },\n  { url: imgSrc4, type: BLOCK_TYPES.business.type },\n  { url: imgSrc6, type: BLOCK_TYPES.business.type },\n  { url: imgSrc7, type: BLOCK_TYPES.business.type },\n];\n","import React from 'react';\r\nimport { BLOCK_LIBRARY } from '../constants';\r\nimport './TilesLibrary.css';\r\n\r\nexport default function TilesLibrary({ selectedTile, onSelect }) {\r\n  return (\r\n    <div className='tiles-library'>\r\n      <div className='list'>\r\n        {BLOCK_LIBRARY.map(({ url }, i) => (\r\n          <div key={i} className={`tile ${selectedTile === i ? 'selected' : ''}`} onClick={() => onSelect(i)}>\r\n            <div\r\n              className='tile-img'\r\n              style={{\r\n                backgroundImage: `url(${url})`,\r\n              }}\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { loadFromHash } from \"./utils\";\r\n\r\nexport const constants = {\r\n  numTilesX: 12,\r\n  numTilesY: 6,\r\n  tileSizeX: 260,\r\n  tileSizeY: 460\r\n};\r\n\r\nexport const indexToTileXY = i => {\r\n  const tileX = i % constants.numTilesX;\r\n  const tileY = Math.floor(i / constants.numTilesX);\r\n  const x = tileX * constants.tileSizeX;\r\n  const y = tileY * constants.tileSizeY;\r\n\r\n  return { tileX, tileY, x, y };\r\n};\r\n\r\nexport const indexToBgPosition = i => {\r\n  const { tileX, tileY } = indexToTileXY(i);\r\n  return `${(tileX / (constants.numTilesX - 1)) * 100}% ${(tileY /\r\n    (constants.numTilesY - 1)) *\r\n    100}%`;\r\n};\r\n\r\nexport const tileToBgPosition = ({ x, y }) => {\r\n  return `${(x / constants.tileSizeX / (constants.numTilesX - 1)) * 100}% ${(y /\r\n    constants.tileSizeY /\r\n    (constants.numTilesY - 1)) *\r\n    100}%`;\r\n};\r\n\r\nexport const indexToPosition = (i, gridSize = 6) => {\r\n  const tileX = i % gridSize;\r\n  const tileY = Math.floor(i / gridSize);\r\n  return { tileX, tileY };\r\n};\r\n\r\nexport const positionToIndex = (tileX, tileY, gridSize = 6) =>\r\n  tileY * gridSize + tileX;\r\n\r\nexport const indexToViewPosition = (\r\n  i,\r\n  gridSize = 6,\r\n  offsetX = 0,\r\n  offsetY = 0\r\n) => {\r\n  const { tileX, tileY } = indexToPosition(i, gridSize);\r\n\r\n  return {\r\n    left: `${(tileX - tileY - 1) * 128 + offsetX}px`,\r\n    top: `${(tileX + tileY) * 73 + offsetY}px`\r\n  };\r\n};\r\n\r\nexport const updateGridSize = (oldGridSize, newGridSize, oldTiles) => {\r\n  // Save tiles along with their grid coordinates\r\n  const save = new Map();\r\n  oldTiles.forEach((tile, i) => {\r\n    const coords = indexToPosition(i, oldGridSize);\r\n    save.set(coords, tile);\r\n  });\r\n\r\n  // Create new empty board\r\n  const newTiles = createTiles(newGridSize, false);\r\n\r\n  // Restore saved tiles, getting their new index from their grid coordinates\r\n  save.forEach((tile, coords) => {\r\n    const newIdx = positionToIndex(coords.tileX, coords.tileY, newGridSize);\r\n    if (newIdx > -1 && newIdx < newTiles.length) {\r\n      newTiles[newIdx] = tile;\r\n    }\r\n  });\r\n\r\n  return newTiles;\r\n};\r\n\r\nexport const availableTiles = new Array(\r\n  constants.numTilesX * constants.numTilesY\r\n)\r\n  .fill(1)\r\n  .map((_, i) => indexToTileXY(i));\r\n\r\nexport const createTiles = (gridSize, randomize = true) =>\r\n  new Array(gridSize * gridSize)\r\n    .fill(0)\r\n    .map((_, i) => (randomize ? Math.floor(Math.random() * 72) : 0));\r\n\r\nexport const loadStateFromHash = (\r\n  baseGridSize = 6,\r\n  baseTiles = createTiles(baseGridSize),\r\n  maybeHash\r\n) => {\r\n  const data = loadFromHash(maybeHash);\r\n  if (\r\n    data &&\r\n    data.gridSize &&\r\n    typeof data.gridSize === \"number\" &&\r\n    data.tiles &&\r\n    data.tiles instanceof Array\r\n  ) {\r\n    baseGridSize = data.gridSize;\r\n    baseTiles = data.tiles;\r\n  }\r\n\r\n  return {\r\n    gridSize: baseGridSize,\r\n    tiles: baseTiles\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { indexToViewPosition } from 'providers/TilesService';\r\nimport { BLOCK_LIBRARY, BLOCK_TYPES } from '../../constants';\r\nimport style from './cityBuilder.module.css';\r\n\r\nconst getTileIdxFromBtnEvent = (ev) =>\r\n  ev.target.hasAttribute('data-tile-idx') ? Number(ev.target.getAttribute('data-tile-idx')) : -1;\r\n\r\nexport default function TilesView({\r\n  tiles,\r\n  onLeftClick,\r\n  onRightClick,\r\n  gridSize = 6,\r\n  offsetX = 130 * gridSize,\r\n  offsetY = -300,\r\n  selectedTile,\r\n}) {\r\n  const handleClick = (ev) => {\r\n    const i = getTileIdxFromBtnEvent(ev);\r\n    if (i > -1) {\r\n      ev.preventDefault();\r\n      ev.stopPropagation();\r\n      if (ev.buttons === 1) {\r\n        onLeftClick(i);\r\n      } else if (ev.buttons === 2) {\r\n        onRightClick(i);\r\n      }\r\n    }\r\n  };\r\n  const handleMouseMove = (ev) => {\r\n    if (ev.buttons) {\r\n      handleClick(ev);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={style.tilesView} onMouseMove={handleMouseMove}>\r\n      {tiles.map((tile, i) => {\r\n        const { top, left } = indexToViewPosition(i, gridSize, offsetX, offsetY);\r\n\r\n        const isNotGround = BLOCK_LIBRARY[tile].type === BLOCK_TYPES.ground.type;\r\n\r\n        return (\r\n          <div\r\n            key={i}\r\n            className={`${style.tile} ${BLOCK_LIBRARY[tile].type !== BLOCK_TYPES.business.type ? style.withHover : style.withError}`}\r\n            style={{\r\n              backgroundImage: `url(${BLOCK_LIBRARY[tile].url})`,\r\n              top,\r\n              left,\r\n              '--hover-image': `url(${BLOCK_LIBRARY[selectedTile].url})`,\r\n            }}\r\n          >\r\n            <div className={`${style.tileBtn} tileBtn`} data-tile-idx={i} onMouseDown={handleClick} />\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport style from \"./tooltip.module.css\";\n\nconst data = [\n  { title: \"Personal\", value: 20 },\n  { title: \"Total income\", value: \"20000UAH\" },\n];\n\nconst Tooltip = ({ onClose }) => {\n  return (\n    <div className={style.tooltip}>\n      <button className={style.closeBtn} onClick={onClose}>\n        x\n      </button>\n      <h3>Pravda</h3>\n      <div className={style.table}>\n        {data.map(({ title, value }) => {\n          return (\n            <>\n              <span>{title}</span>\n              <span>{value}</span>\n            </>\n            // <div className={style.row}>\n            // </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Tooltip;\n","import React, { useState } from 'react';\r\nimport { indexToViewPosition } from 'providers/TilesService';\r\nimport Tooltip from './tooltip/Tooltip';\r\nimport style from './cityViewer.module.css';\r\nimport { BLOCK_LIBRARY, BLOCK_TYPES } from '../../constants';\r\n\r\nconst getTileIdxFromBtnEvent = (ev) =>\r\n  ev.target.hasAttribute('data-tile-idx') ? Number(ev.target.getAttribute('data-tile-idx')) : -1;\r\n\r\nexport default function CityViewer({\r\n  tiles,\r\n  // onLeftClick,\r\n  // onRightClick,\r\n  gridSize = 6,\r\n  offsetX = 150 * gridSize,\r\n  offsetY = -300,\r\n}) {\r\n  const [selected, setSelected] = useState(null);\r\n\r\n  const onClick = (i) => {\r\n    setSelected(i);\r\n  };\r\n\r\n  const handleClick = (ev) => {\r\n    const i = getTileIdxFromBtnEvent(ev);\r\n    if (i > -1) {\r\n      ev.preventDefault();\r\n      ev.stopPropagation();\r\n\r\n      if (ev.buttons === 1) {\r\n        // onLeftClick(i);\r\n        onClick(i);\r\n      } else if (ev.buttons === 2) {\r\n        // onRightClick(i);\r\n      }\r\n    }\r\n  };\r\n\r\n  const closeHandler = () => {\r\n    setSelected(null);\r\n  };\r\n\r\n  return (\r\n    <div className={style.tilesView}>\r\n      {tiles.map((tile, i) => {\r\n        const { top, left } = indexToViewPosition(i, gridSize, offsetX, offsetY);\r\n\r\n        const { url, type } = BLOCK_LIBRARY[tile];\r\n\r\n        return (\r\n          <div\r\n            key={i}\r\n            className={`${style.tile} ${type === BLOCK_TYPES.business.type ? style.withHover : ''}`}\r\n            style={{\r\n              backgroundImage: `url(${url})`,\r\n              top,\r\n              left,\r\n\r\n              '--hover-image': `url(${url})`,\r\n            }}\r\n          >\r\n            {selected === i && <Tooltip onClose={closeHandler} />}\r\n\r\n            <div\r\n              className={style.tileBtn}\r\n              data-tile-idx={i}\r\n              onMouseDown={type === BLOCK_TYPES.business.type ? handleClick : undefined}\r\n            ></div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport Header from \"components/header/Header\";\nimport TilesLibrary from \"components/TilesLibrary\";\nimport CityBuilder from \"components/cityBuilder/CityBuilder\";\nimport CityViewer from \"components/cityViewer/CityViewer\";\nimport {\n  createTiles,\n  updateGridSize,\n  loadStateFromHash,\n} from \"providers/TilesService\";\nimport { debouce, saveToHash } from \"providers/utils\";\nimport \"./TilesBuilder.css\";\n\nlet lastHash = \"\";\n\nconst baseTiles = [\n  3, 0, 0, 2, 0, 2, 0, 5, 0, 0, 3, 0, 3, 0, 5, 3, 0, 3, 0, 4, 2, 0, 0, 0, 5, 4,\n  0, 0, 0, 5, 3, 0, 4, 0, 0, 4,\n];\n\nexport default function TilesBuilder() {\n  const [gridSize, setGridSize] = useState(6);\n  const [tiles, setTiles] = useState(baseTiles);\n  const [selectedTile, setSelectedTile] = useState(0);\n  const [isEditMode, setIsEditMode] = useState(true);\n\n  useEffect(() => {\n    window.addEventListener(\"hashchange\", onHashChange);\n    return () => window.removeEventListener(\"hashchange\", onHashChange);\n  });\n\n  /**\n   * Utils\n   */\n  const updateHash = (delay = 500) =>\n    debouce(() => {\n      lastHash = saveToHash({ gridSize, tiles });\n    }, delay);\n  const onHashChange = (ev) => {\n    const newHash = new URL(ev.newURL).hash.substr(1);\n    if (lastHash !== newHash) {\n      lastHash = newHash;\n      handleLoadHash(newHash, false);\n    }\n  };\n  /**\n   * Header handlers\n   */\n  const handleLoadHash = (hash, doUpdate = true) => {\n    const { gridSize: newGridSize, tiles: newTiles } = loadStateFromHash(\n      gridSize,\n      tiles,\n      hash\n    );\n\n    // Update state\n    setGridSize(newGridSize);\n    setTiles(newTiles);\n    if (doUpdate) {\n      updateHash(0);\n    }\n  };\n  const handleGridSizeChange = (ev) => {\n    const newValue = Number(ev.target.value);\n    const newTiles = updateGridSize(gridSize, newValue, tiles);\n\n    // Update state\n    setGridSize(newValue);\n    setTiles(newTiles);\n    updateHash();\n  };\n  const randomize = () => {\n    setTiles(createTiles(gridSize));\n    updateHash(0);\n  };\n  const clear = () => {\n    setTiles(createTiles(gridSize, false));\n    updateHash(0);\n  };\n\n  /**\n   * Library handlers\n   */\n  const handleSelect = (newSelection) => {\n    if (newSelection !== selectedTile) {\n      setSelectedTile(newSelection);\n    }\n  };\n\n  /**\n   * View Handlers\n   */\n  const setTile = (tileIdx, tileType) => {\n    const newTiles = [...tiles];\n    newTiles[tileIdx] = tileType;\n    setTiles(newTiles);\n\n    updateHash();\n  };\n  const leftClick = (tileIdx) => setTile(tileIdx, selectedTile);\n  const rightClick = (tileIdx) => setTile(tileIdx, 0);\n\n  const editHandler = () => {\n    setIsEditMode((prev) => !prev);\n  };\n\n  return (\n    <div className=\"tiles-builder\">\n      <Header\n        gridSize={gridSize}\n        onLoadHash={handleLoadHash}\n        onGridSizeChange={handleGridSizeChange}\n        onRandomize={randomize}\n        onClear={clear}\n        isEditMode={isEditMode}\n        onEditHandler={editHandler}\n      />\n\n      {isEditMode && (\n        <TilesLibrary selectedTile={selectedTile} onSelect={handleSelect} />\n      )}\n\n      {isEditMode ? (\n        <CityBuilder\n          tiles={tiles}\n          gridSize={gridSize}\n          onLeftClick={leftClick}\n          onRightClick={rightClick}\n          selectedTile={selectedTile}\n        />\n      ) : (\n        <CityViewer\n          tiles={tiles}\n          gridSize={gridSize}\n          onLeftClick={leftClick}\n          onRightClick={rightClick}\n        />\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport TilesBuilder from \"components/TilesBuilder\";\nimport { ModalProvider } from \"components/common/Modal\";\nimport \"./styles.css\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <ModalProvider>\n        <TilesBuilder />\n      </ModalProvider>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}